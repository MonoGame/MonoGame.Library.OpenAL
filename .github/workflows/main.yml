
name: Build

on:
  push:
    branches:
      - main
    tags:
      - 1.**
  pull_request:
    branches:
      - main

jobs:
  build:
    name: build-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest, ubuntu-22.04-arm]
      fail-fast: false
    steps:
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3
      - name: Add msbuild to PATH
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get install build-essential git make cmake autoconf automake pkg-config
        shell: bash
      - name: Install Linux OpenAL dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get install libudev-dev libasound2-dev libpulse-dev libjack-dev libsdl2-dev oss4-dev portaudio19-dev qtbase5-dev libdbus-1-dev libpipewire-0.3-dev
        shell: bash
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Run CAKE
        run: dotnet run --project ./build/Build.csproj --universalBinary=true
        env:
          ACTIONS_RUNTIME_TOKEN: ${{ env.ACTIONS_RUNTIME_TOKEN }}
          ACTIONS_RUNTIME_URL: "${{ env.ACTIONS_RUNTIME_URL }}"
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    needs: [ build ]
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Rename License File
        run: mv ./openal-soft/BSD-3Clause ./openal-soft/LICENSE 
      - name: Run CAKE
        run: dotnet run --project ./build/Build.csproj -- --target=Package --universalBinary=true --libraryname=OpenAL --licensepath=openal-soft/LICENSE -v:diagnostic
        env:
          ACTIONS_RUNTIME_TOKEN: ${{ env.ACTIONS_RUNTIME_TOKEN }}
          ACTIONS_RUNTIME_URL: "${{ env.ACTIONS_RUNTIME_URL }}"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Make a release
        uses: ncipollo/release-action@v1
        with:
          name: 'MonoGame.Library.OpenAL ${{ github.ref_name }}'
          tag: ${{ github.ref_name }}
          allowUpdates: true
          removeArtifacts: true
          artifacts: "bin/Release/*.nupkg"
          token: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref_type == 'tag'
